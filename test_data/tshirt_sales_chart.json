{
  "code": "import pandas as pd\nimport matplotlib\nmatplotlib.use('Agg')  # Use non-interactive backend\nimport matplotlib.pyplot as plt\nimport os\nimport glob\n\n# Script to create a bar chart from CSV data\nprint(f\"Current working directory: {os.getcwd()}\")\n\n# Try to find data files in different locations\nprint(\"Looking for data files in multiple locations...\")\n\n# Check /data directory\ndata_files = glob.glob(\"/data/*\")\nprint(f\"Files in /data directory: {len(data_files)}\")\n\n# If no files in /data, check current directory\nif not data_files:\n    print(\"No files found in /data directory, checking current directory...\")\n    data_files = glob.glob(\"*.csv\")\n    print(f\"Files in current directory: {len(data_files)}\")\n    \n    # List all files in current directory\n    print(\"All files in current directory:\")\n    for f in os.listdir('.'):\n        print(f\"- {f}\")\n\n# If still no files, exit\nif not data_files:\n    print(\"Error: No CSV files found in any location\")\n    exit(1)\n\nprint(\"Available data files:\")\nfor f in data_files:\n    print(f\"- {f}\")\n\n# Use the first CSV file found\ninput_file = data_files[0]\nprint(f\"Using input file: {input_file}\")\n\n# Read the CSV file\ndf = pd.read_csv(input_file)\nprint(f\"Successfully read {input_file}\")\nprint(f\"Data preview:\\n{df.head()}\")\n\n# Create a bar chart of t-shirt sales per day\n# Assume each row represents a day's sales\ndays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']\n\n# Use the data from the CSV file\nsales = df['value'].tolist()\n\n# Create a DataFrame with days as index\nsales_df = pd.DataFrame({'Sales': sales}, index=days[:len(sales)])\nprint(f\"Sales data:\\n{sales_df}\")\n\n# Create the bar chart\nplt.figure(figsize=(10, 6))\nsales_df.plot(kind='bar', color='skyblue')\nplt.title('T-Shirt Sales by Day', fontsize=16)\nplt.xlabel('Day of Week', fontsize=14)\nplt.ylabel('Number of T-Shirts Sold', fontsize=14)\nplt.xticks(rotation=45)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Add value labels on top of each bar\nfor i, value in enumerate(sales):\n    plt.text(i, value + 1, str(value), ha='center', va='bottom', fontweight='bold')\n\n# Improve layout\nplt.tight_layout()\n\n# Save the chart as a PNG file directly in the current working directory\noutput_file = 'tshirt_sales_chart.png'\nplt.savefig(output_file, dpi=300)\nprint(f\"Chart saved as {output_file}\")\nprint(f\"Chart absolute path: {os.path.abspath(output_file)}\")\n\n# Verify the file was created\nif os.path.exists(output_file):\n    print(f\"File exists at {output_file} with size {os.path.getsize(output_file)} bytes\")\nelse:\n    print(f\"Failed to create file at {output_file}\")\n\n# Also save a textual report\nreport_file = 'sales_report.txt'\nwith open(report_file, 'w') as f:\n    f.write(\"T-Shirt Sales Report\\n\")\n    f.write(\"===================\\n\\n\")\n    f.write(f\"Data source: {input_file}\\n\\n\")\n    f.write(\"Daily Sales:\\n\")\n    for i, day in enumerate(days[:len(sales)]):\n        f.write(f\"{day}: {sales[i]} t-shirts\\n\")\n    f.write(f\"\\nTotal sales: {sum(sales)} t-shirts\")\n\nprint(f\"Report written to {report_file}\")\n\n# List all files in current directory to confirm outputs were created\nprint(\"Current directory contents after processing:\")\nfor f in os.listdir('.'):\n    print(f\"- {f} ({os.path.getsize(f)} bytes)\")",
  "data_urls": ["/api/files/f890dea2-bc7c-4ae1-b9fe-9c3ff17d2628"],
  "packages": ["pandas", "matplotlib"],
  "timeout": 30,
  "resource_limits": {"memory": 512, "cpu": 1}
} 