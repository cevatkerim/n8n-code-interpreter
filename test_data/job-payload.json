{
  "code": "import pandas as pd\nimport os\nimport glob\n\n# Script to process data files uploaded via data_urls\nprint(f\"Current working directory: {os.getcwd()}\")\n\n# Try to find data files in different locations\nprint(\"Looking for data files in multiple locations...\")\n\n# Check /data directory\ndata_files = glob.glob(\"/data/*\")\nprint(f\"Files in /data directory: {len(data_files)}\")\n\n# If no files in /data, check current directory\nif not data_files:\n    print(\"No files found in /data directory, checking current directory...\")\n    data_files = glob.glob(\"*.csv\")\n    print(f\"Files in current directory: {len(data_files)}\")\n    \n    # List all files in current directory\n    print(\"All files in current directory:\")\n    for f in os.listdir('.'):\n        print(f\"- {f}\")\n\n# If still no files, exit\nif not data_files:\n    print(\"Error: No CSV files found in any location\")\n    exit(1)\n\nprint(\"Available data files:\")\nfor f in data_files:\n    print(f\"- {f}\")\n\n# Use the first CSV file found\ninput_file = data_files[0]\nprint(f\"Using input file: {input_file}\")\n\n# Read the CSV file\ndf = pd.read_csv(input_file)\nprint(f\"Successfully read {input_file}\")\nprint(f\"Data preview:\\n{df.head()}\")\n\n# Calculate sum of sepal length (if column exists, otherwise use first numeric column)\nif 'sepal_length' in df.columns:\n    column_name = 'sepal_length'\nelse:\n    # Use first numeric column\n    numeric_cols = df.select_dtypes(include=['number']).columns\n    if len(numeric_cols) > 0:\n        column_name = numeric_cols[0]\n        print(f\"No 'sepal_length' column found, using {column_name} instead\")\n    else:\n        print(\"No numeric columns found in the dataset\")\n        exit(1)\n\ntotal = df[column_name].sum()\nprint(f\"Total sum of {column_name}: {total}\")\n\n# Write result to output file\nwith open('output.txt', 'w') as f:\n    f.write(f\"Data URL Test Result\\n\")\n    f.write(f\"Input file: {input_file}\\n\")\n    f.write(f\"Total sum of {column_name}: {total}\\n\")\n    f.write(f\"Number of rows: {len(df)}\\n\")\n\nprint(\"Output written to output.txt\")",
  "data_urls": ["https://raw.githubusercontent.com/plotly/datasets/master/iris.csv"],
  "packages": ["pandas"],
  "timeout": 30,
  "resource_limits": {"memory": 512, "cpu": 1}
} 